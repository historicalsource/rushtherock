head	1.2;
access;
symbols
	AREA_52_00:1.2;
locks; strict;
comment	@;; @;


1.2
date	97.05.30.03.21.54;	author shepperd;	state Exp;
branches;
next	1.1;

1.1
date	97.05.17.01.51.18;	author shepperd;	state Exp;
branches;
next	;


desc
@Generic PLX9050 defines.
@


1.2
log
@Corrected REG macro.
@
text
@.if not_defined, _PLX9050_MAC_
_PLX9050_MAC_ == 0
;/* plx9050.mac						*/
;/*							*/
;/* Include file for the PLX9050 used on Chameleon	*/
;/*							*/
;/* Written By:	Andrew Dyer <adyer@@mcs.com>		*/
;/* 		Midway Games, Inc.			*/
;/* Date:	Mon Feb 24 17:27:30 CST 1997		*/
;/* Modified:	970506_DMS - converted to macpp		*/
;
;
	HEX_CONST PLX_PCI_MFG_ID	0x10B5
	HEX_CONST PLX_PCI_DEV_ID	0x9050
;
	.DEFINE BASIC_TYPE	VU32
	.macro REG sym, offset, comments
	 HEX_CONST 'sym'_OFF	offset	<comments>
	 HEX_CONST 'sym'_BASE	offset+CHAM_PCI_W1_BASE	<comments>
	VAR	'sym'_T	BASIC_TYPE 'sym'_BASE <comments>
	.endm
;
;/* LOCAL CONFIGURATION REGISTERS */
	REG PLX_LAS0RR	0x00
	REG PLX_LAS1RR	0x04
	REG PLX_LAS2RR	0x08
	REG PLX_LAS3RR	0x0C
	REG PLX_EROMRR	0x10
;/* bits in LAS?RR Local Address Space Range Register */
	HEX_CONST PLX_LASRR_IS_IO			0x01
	HEX_CONST PLX_LASRR_CAN_PREFETCH		0x08
	HEX_CONST PLX_LASRR_MEM_DECODE_MASK	0x0FFFFFF0
;
	REG PLX_LAS0BA	0x14
	REG PLX_LAS1BA	0x18
	REG PLX_LAS2BA	0x1C
	REG PLX_LAS3BA	0x20
	REG PLX_EROMBA	0x24
;/* bits in LAS?BA Local Address Space ? Local Base Address (Re-Map) Register */
	HEX_CONST PLX_LASBA_ENABLE		0x01
	HEX_CONST PLX_LASBA_MEM_DECODE_MASK	0x0FFFFFF0
;
	REG PLX_LAS0BRD	0x28
	REG PLX_LAS1BRD	0x2C
	REG PLX_LAS2BRD	0x30
	REG PLX_LAS3BRD	0x34
	REG PLX_EROMBRD	0x38
;/* bits in LAS?BRD Local Address Space ? Bus Region Descriptor */
	HEX_CONST PLX_LASBRD_USE_BURST		0x00000001
	HEX_CONST PLX_LASBRD_USE_READY		0x00000002
	HEX_CONST PLX_LASBRD_USE_BTERM		0x00000004
	HEX_CONST PLX_LASBRD_NO_PREFETCH	0x00000000
	HEX_CONST PLX_LASBRD_PREFETCH_4LW	0x00000008
	HEX_CONST PLX_LASBRD_PREFETCH_8LW	0x00000010
	HEX_CONST PLX_LASBRD_PREFETCH_16LW	0x00000018
	HEX_CONST PLX_LASBRD_USE_PREFETCH	0x00000020
	HEX_CONST PLX_LASBRD_NRAD_MASK		0x000007c0
	HEX_CONST PLX_LASBRD_NRAD_SHIFT           6
	HEX_CONST PLX_LASBRD_NRDD_MASK		0x00001800
	HEX_CONST PLX_LASBRD_NRDD_SHIFT           11
	HEX_CONST PLX_LASBRD_NXDA_MASK		0x00006000
	HEX_CONST PLX_LASBRD_NXDA_SHIFT           13
	HEX_CONST PLX_LASBRD_NWAD_MASK		0x000F8000
	HEX_CONST PLX_LASBRD_NWAD_SHIFT           15
	HEX_CONST PLX_LASBRD_NWDD_MASK		0x00300000
	HEX_CONST PLX_LASBRD_NWDD_SHIFT           20
;
	HEX_CONST PLX_LASBRD_BUS_WIDTH_8	0x00000000
	HEX_CONST PLX_LASBRD_BUS_WIDTH_16	0x00400000
	HEX_CONST PLX_LASBRD_BUS_WIDTH_32	0x00800000
	HEX_CONST PLX_LASBRD_BIG_ENDIAN		0x01000000
	HEX_CONST PLX_LASBRD_LIT_ENDIAN         0x00000000
	HEX_CONST PLX_LASBRD_RD_STB_DLY		0x0C000000
	HEX_CONST PLX_LASBRD_RD_STB_SHIFT         26
	HEX_CONST PLX_LASBRD_WR_STB_DLY		0x30000000
	HEX_CONST PLX_LASBRD_WR_STB_SHIFT         28
	HEX_CONST PLX_LASBRD_WR_CYC_HOLD	0xc0000000
	HEX_CONST PLX_LASBRD_WR_CYC_SHIFT         30
;
	REG PLX_CS0BASE	0x3C
	REG PLX_CS1BASE	0x40
	REG PLX_CS2BASE	0x44
	REG PLX_CS3BASE	0x48
/* bits in CS?BASE registers */
	HEX_CONST PLX_CSBASE_ENABLE		0x00000001
	HEX_CONST PLX_CSBASE_ADDR_MASK		0x0FFFFFFE
;
	REG PLX_INTCSR	0x4C
;
/* bits in the INTCSR register */
	HEX_CONST PLX_INTCSR_INT1_ENAB		0x00000001
	HEX_CONST PLX_INTCSR_INT1_ACTIVE_HIGH	0x00000002
	HEX_CONST PLX_INTCSR_INT1_STATUS	0x00000004
	HEX_CONST PLX_INTCSR_INT2_ENAB		0x00000008
	HEX_CONST PLX_INTCSR_INT2_ACTIVE_HIGH	0x00000010
	HEX_CONST PLX_INTCSR_INT2_STATUS	0x00000020
	HEX_CONST PLX_INTCSR_PCIINT_ENAB	0x00000040
	HEX_CONST PLX_INTSCR_SW_INT		0x00000080
;
	REG PLX_CNTRL	0x50
;/* bits in the control register */
	HEX_CONST PLX_CNTRL_IO0_FUNC		0x00000001
	HEX_CONST PLX_CNTRL_IO0_IS_OUTPUT	0x00000002
	HEX_CONST PLX_CNTRL_IO0_DATA		0x00000004
	HEX_CONST PLX_CNTRL_IO1_FUNC		0x00000008
	HEX_CONST PLX_CNTRL_IO1_IS_OUTPUT	0x00000010
	HEX_CONST PLX_CNTRL_IO1_DATA		0x00000020
	HEX_CONST PLX_CNTRL_IO2_FUNC		0x00000040
	HEX_CONST PLX_CNTRL_IO2_IS_OUTPUT	0x00000080
	HEX_CONST PLX_CNTRL_IO2_DATA		0x00000100
	HEX_CONST PLX_CNTRL_IO3_FUNC		0x00000200
	HEX_CONST PLX_CNTRL_IO3_IS_OUTPUT	0x00000400
	HEX_CONST PLX_CNTRL_IO3_DATA		0x00000800
	HEX_CONST PLX_CNTRL_BAR0_ONLY		0x00001000
	HEX_CONST PLX_CNTRL_PCI_RD_MODE		0x00004000
	HEX_CONST PLX_CNTRL_PCI_RD_WRFLUSH	0x00008000
	HEX_CONST PLX_CNTRL_PCI_RD_NOFLUSH	0x00010000
	HEX_CONST PLX_CNTRL_PCI_RD_NOWRITE	0x00020000
	HEX_CONST PLX_CNTRL_PCI_WR_MODE		0x00040000
	HEX_CONST PLX_CNTRL_PCI_TGT_RTRY_MASK	0x00780000
	HEX_CONST PLX_CNTRL_PCI_TGT_RTRY_SHIFT	19
	HEX_CONST PLX_CNTRL_PCI_SLAVE_LOCK	0x00800000
	HEX_CONST PLX_CNTRL_EEPROM_CLK		0x01000000
	HEX_CONST PLX_CNTRL_EEPROM_CS		0x02000000
	HEX_CONST PLX_CNTRL_EEPROM_WR_DATA	0x04000000
	HEX_CONST PLX_CNTRL_EEPROM_RD_DATA	0x08000000
	HEX_CONST PLX_CNTRL_EEPROM_VALID	0x10000000
	HEX_CONST PLX_CNTRL_RELOAD_CONFIG	0x20000000
	HEX_CONST PLX_CNTRL_RESET		0x40000000
	HEX_CONST PLX_CNTRL_MASK_REV		0x80000000
.endc		;_PLX9050_MAC_
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
	 HEX_CONST 'sym'_BASE	offset+(CHAM_PCI_W1_BASE&0x1FFFFFFF)	<comments>
@
